service: palpiteiro-draft
frameworkVersion: "3"

custom:
  account: "#{AWS::AccountId}"

provider:
  name: aws
  stage: ${opt:stage}
  region: us-east-1
  deploymentBucket: palpiteiro-${opt:stage}
  apiGateway:
    apiKeys:
      - streamlit-${opt:stage}

package:
  individually: true
  patterns:
    - "!**/*"
    - "utils/**/*.py"

functions:
  draft:
    handler: draft.handler
    description: Line up drafting for fantasy soccer.
    runtime: python3.9
    timeout: 10 # seconds
    memorySize: 2048 # megabytes
    package:
      patterns:
        - "draft/**/*.py"
        - "draft/model/*"
        - "!draft/tests/**/*"
        - "!draft/notebooks/**/*"

  parse:
    handler: read_bigquery.handler
    description: Parse arguments for drafting.
    runtime: python3.9
    timeout: 900
    package:
      patterns:
        - "parse/*.py"
    layers:
      - { Ref: BigqueryLambdaLayer }
    environment:
      GCP_KEYFILE: ${env:GCP_KEYFILE}

layers:
  bigquery:
    package:
      artifact: layer_bigquery.zip

stepFunctions:
  stateMachines:
    palpiteiro-draft:
      name: ${self:service}-${opt:stage}
      role: arn:aws:iam::${aws:accountId}:role/palpiteiro-step-functions
      type: EXPRESS
      events:
        - http:
            path: draft
            method: POST
            private: true
            action: StartSyncExecution
            request:
              template:
                application/json: |
                  #set( $body = $util.escapeJavaScript($input.json('$')).replaceAll("\\'", "'") )
                  {
                    "input": "$body",
                    "stateMachineArn": "arn:aws:states:${self:provider.region}:${aws:accountId}:stateMachine:${self:service}-${opt:stage}"
                  }
      definition:
        StartAt: Parse
        States:
          Parse:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                Fn::GetAtt: [parse, Arn]
              Payload.$: "$"
            OutputPath: $.Payload
            Next: Draft
          Draft:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                Fn::GetAtt: [draft, Arn]
              Payload.$: "$"
            OutputPath: "$.Payload"
            End: true

plugins:
  - serverless-step-functions
